// Generated by CoffeeScript 1.6.3
(function() {
  var ConfirmDialog, Dialog,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Dialog = require('./Dialog');

  ConfirmDialog = (function(_super) {
    __extends(ConfirmDialog, _super);

    ConfirmDialog.trueText = 'OK';

    ConfirmDialog.falseText = 'Cancel';

    ConfirmDialog.prototype.trueText = null;

    ConfirmDialog.prototype.falseText = null;

    function ConfirmDialog(content, trueText, falseText) {
      this.content = content;
      this.trueText = trueText != null ? trueText : ConfirmDialog.trueText;
      this.falseText = falseText != null ? falseText : ConfirmDialog.falseText;
      ConfirmDialog.__super__.constructor.apply(this, arguments);
      this.addButton(this.trueText, null);
      this.addButton(this.falseText, null);
    }

    ConfirmDialog.prototype.onTrue = function(fn) {
      var button, _i, _len, _ref, _results;
      _ref = this.buttons;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        button = _ref[_i];
        if (button.title === this.trueText) {
          button.action = fn;
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    ConfirmDialog.prototype.onFalse = function(fn) {
      var button, _i, _len, _ref, _results;
      _ref = this.buttons;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        button = _ref[_i];
        if (button.title === this.falseText) {
          button.action = fn;
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return ConfirmDialog;

  })(Dialog);

  module.exports = ConfirmDialog;

}).call(this);
